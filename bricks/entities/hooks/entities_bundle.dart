// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final entitiesBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"{{entity_name.snakeCase()}}/{{entity_name.snakeCase()}}.dart","data":"e3sjdXNlX25vbmV9fXt7PiBiYXNpY19lbnRpdHkgfX17ey91c2Vfbm9uZX19","type":"text"},{"path":"{{~ basic_entity }}","data":"e3sjdXNlX2VxdWF0YWJsZX19aW1wb3J0ICdwYWNrYWdlOmVxdWF0YWJsZS9lcXVhdGFibGUuZGFydCc7e3svdXNlX2VxdWF0YWJsZX19DQp7ez4gcmVsYXRpb25zIH19DQoNCmJhc2UgY2xhc3Mge3tlbnRpdHlfbmFtZS5wYXNjYWxDYXNlKCl9fXt7I3VzZV9lcXVhdGFibGV9fSBleHRlbmRzIEVxdWF0YWJsZXt7L3VzZV9lcXVhdGFibGV9fSB7DQogIGNvbnN0IHt7ZW50aXR5X25hbWUucGFzY2FsQ2FzZSgpfX0oe3sjaGFzUHJvcGVydGllc319eyB7eyNwcm9wZXJ0aWVzfX0NCiAgICB7e15pc051bGxhYmxlfX1yZXF1aXJlZCB7ey9pc051bGxhYmxlfX10aGlzLnt7bmFtZS5jYW1lbENhc2UoKX19LHt7L3Byb3BlcnRpZXN9fQ0KICB9e3svaGFzUHJvcGVydGllc319KTsNCnt7I3VzZV9qc29ufX0NCiAge3s+IGJhc2ljX2Zyb21fanNvbiB9fXt7L3VzZV9qc29ufX0NCnt7I3Byb3BlcnRpZXN9fQ0KICBmaW5hbCB7eyNoYXNTcGVjaWFsfX17e3t0eXBlfX19e3svaGFzU3BlY2lhbH19e3teaGFzU3BlY2lhbH19e3t0eXBlfX17ey9oYXNTcGVjaWFsfX0ge3tuYW1lLmNhbWVsQ2FzZSgpfX07DQp7ey9wcm9wZXJ0aWVzfX17eyN1c2VfY29weXdpdGh9fQ0KICB7ez4gY29weV93aXRoIH19e3svdXNlX2NvcHl3aXRofX0NCnt7I3VzZV9lcXVhdGFibGV9fQ0KICB7ez4gZXF1YXRhYmxlX3Byb3BzIH19e3svdXNlX2VxdWF0YWJsZX19DQp7eyN1c2VfanNvbn19DQogIHt7PiBiYXNpY190b19qc29uIH19e3svdXNlX2pzb259fQ0Ke3sjdXNlX3Rvc3RyaW5nfX0NCiAge3s+IHRvX3N0cmluZyB9fXt7L3VzZV90b3N0cmluZ319DQp9DQo=","type":"text"},{"path":"{{~ copy_with }}","data":"Ly8vIENyZWF0ZXMgYSBjb3B5IG9mIHRoZSBjdXJyZW50IHt7ZW50aXR5X25hbWUucGFzY2FsQ2FzZSgpfX0gd2l0aCBwcm9wZXJ0eSBjaGFuZ2VzDQp7e2VudGl0eV9uYW1lLnBhc2NhbENhc2UoKX19IGNvcHlXaXRoKHt7I2hhc1Byb3BlcnRpZXN9fXsge3sjcHJvcGVydGllc319DQogIHt7I2hhc1NwZWNpYWx9fXt7e3R5cGV9fX17ey9oYXNTcGVjaWFsfX17e15oYXNTcGVjaWFsfX17e3R5cGV9fXt7L2hhc1NwZWNpYWx9fXt7XmlzTnVsbGFibGV9fT97ey9pc051bGxhYmxlfX17eyNpc051bGxhYmxlfX0gRnVuY3Rpb24oKT97ey9pc051bGxhYmxlfX0ge3tuYW1lLmNhbWVsQ2FzZSgpfX0se3svcHJvcGVydGllc319DQp9e3svaGFzUHJvcGVydGllc319KSB7DQogIHJldHVybiB7e2VudGl0eV9uYW1lLnBhc2NhbENhc2UoKX19KHt7I3Byb3BlcnRpZXN9fQ0KICAgIHt7bmFtZS5jYW1lbENhc2UoKX19OiB7e25hbWUuY2FtZWxDYXNlKCl9fXt7I2lzTnVsbGFibGV9fSAhPSBudWxsID8ge3tuYW1lLmNhbWVsQ2FzZSgpfX0oKXt7L2lzTnVsbGFibGV9fSB7eyNpc051bGxhYmxlfX06e3svaXNOdWxsYWJsZX19e3teaXNOdWxsYWJsZX19Pz97ey9pc051bGxhYmxlfX0gdGhpcy57e25hbWUuY2FtZWxDYXNlKCl9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgKTsNCn0NCg==","type":"text"},{"path":"{{~ equatable_props }}","data":"QG92ZXJyaWRlDQpMaXN0PE9iamVjdD8+IGdldCBwcm9wcyA9PiBbe3sjcHJvcGVydGllc319DQogICAgICB7e25hbWUuY2FtZWxDYXNlKCl9fSx7ey9wcm9wZXJ0aWVzfX0NCiAgICBdOw==","type":"text"},{"path":"{{~ relations }}","data":"e3sjaGFzUmVsYXRpb25zfX17eyNyZWxhdGlvbnN9fWltcG9ydCAncGFja2FnZTp7e3tmdWxsUGF0aH19fXt7bmFtZS5zbmFrZUNhc2UoKX19LmRhcnQnOw0Ke3svcmVsYXRpb25zfX17ey9oYXNSZWxhdGlvbnN9fQ==","type":"text"}],"hooks":[{"path":"data_types.dart","data":"YWJzdHJhY3QgY2xhc3MgRGF0YVR5cGVzIHsNCiAgLy8vIFRoZSBrbm93biBkYXRhIHR5cGUgdmFsdWVzDQogIHN0YXRpYyBMaXN0PFN0cmluZz4gdmFsdWVzID0gWw0KICAgICdTdHJpbmcnLA0KICAgICdudW0nLA0KICAgICdpbnQnLA0KICAgICdkb3VibGUnLA0KICAgICdib29sJywNCiAgICAnTGlzdCcsDQogICAgJ01hcCcsDQogICAgJ2R5bmFtaWMnLA0KICAgICdTZXQnLA0KICAgICdEYXRlVGltZScsDQogICAgJ051bGwnLA0KICBdOw0KfQ0K","type":"text"},{"path":"entity_service.dart","data":"","type":"text"},{"path":"exceptions.dart","data":"Ly8vIFRoZSBiYXNlIG1vZGVsIGV4Y2VwdGlvbiBjbGFzcw0KYWJzdHJhY3QgY2xhc3MgRW50aXR5RXhjZXB0aW9uIGltcGxlbWVudHMgRXhjZXB0aW9uIHt9DQoNCi8vLyB7QHRlbXBsYXRlIHB1YnNwZWNfbmFtZV9leGNlcHRpb259DQovLy8gVGhlIGV4Y2VwdGlvbiB0aGF0IGlzIHJhaXNlZCB3aGVuIHRoZSBicmljayBjYW5ub3QgZmluZA0KLy8vIGEgcHVic3BlYyB5YW1sIG5hbWUNCi8vLyB7QGVuZHRlbXBsYXRlfQ0KY2xhc3MgUHVic3BlY05hbWVFeGNlcHRpb24gaW1wbGVtZW50cyBFbnRpdHlFeGNlcHRpb24gew0KICAvLy8ge0BtYWNybyBwdWJzcGVjX25hbWVfZXhjZXB0aW9ufQ0KICBjb25zdCBQdWJzcGVjTmFtZUV4Y2VwdGlvbigpOw0KfQ0K","type":"text"},{"path":"json_ast/error.dart","data":"aW1wb3J0ICdkYXJ0OmNvcmUnOw0KaW1wb3J0ICdkYXJ0Om1hdGgnOw0KDQpjbGFzcyBTZXR0aW5ncyB7DQogIGZpbmFsIGludCBleHRyYUxpbmVzOw0KICBmaW5hbCBpbnQgdGFiU2l6ZTsNCiAgZmluYWwgYm9vbCBsb2M7DQogIGZpbmFsIHNvdXJjZTsNCg0KICBTZXR0aW5ncygNCiAgICAgIHt0aGlzLmV4dHJhTGluZXMgPSAyLA0KICAgICAgdGhpcy50YWJTaXplID0gNCwNCiAgICAgIHRoaXMubG9jID0gdHJ1ZSwNCiAgICAgIHRoaXMuc291cmNlID0gbnVsbH0pOw0KfQ0KDQpTdHJpbmcgcmVwZWF0U3RyaW5nKFN0cmluZyBzdHIsIGludCBuKSB7DQogIGlmIChuID09IDApIHsNCiAgICByZXR1cm4gJyc7DQogIH0gZWxzZSBpZiAobiA9PSAxKSB7DQogICAgcmV0dXJuIHN0cjsNCiAgfQ0KICBmaW5hbCBzdHJCdWYgPSBuZXcgU3RyaW5nQnVmZmVyKCk7DQogIGZvciAoaW50IGkgPSAwOyBpIDwgbjsgaSsrKSB7DQogICAgc3RyQnVmLndyaXRlKHN0cik7DQogIH0NCiAgcmV0dXJuIHN0ckJ1Zi50b1N0cmluZygpOw0KfQ0KDQpTdHJpbmcgcHJpbnRMaW5lKA0KICAgIFN0cmluZyBsaW5lLCBpbnQgcG9zaXRpb24sIGludCBtYXhOdW1MZW5ndGgsIFNldHRpbmdzIHNldHRpbmdzKSB7DQogIGZpbmFsIG4gPSBwb3NpdGlvbi50b1N0cmluZygpOw0KICBmaW5hbCBmb3JtYXR0ZWROdW0gPSBuLnBhZExlZnQobWF4TnVtTGVuZ3RoKTsNCiAgZmluYWwgdGFiUmVwbGFjZW1lbnQgPSByZXBlYXRTdHJpbmcoJyAnLCBzZXR0aW5ncy50YWJTaXplKTsNCiAgcmV0dXJuIGZvcm1hdHRlZE51bSArICcgfCAnICsgbGluZS5yZXBsYWNlQWxsKCdcdCcsIHRhYlJlcGxhY2VtZW50KTsNCn0NCg0KU3RyaW5nIHByaW50TGluZXMoTGlzdDxTdHJpbmc+IGxpbmVzLCBpbnQgc3RhcnQsIGludCBlbmQsIGludCBtYXhOdW1MZW5ndGgsDQogICAgU2V0dGluZ3Mgc2V0dGluZ3MpIHsNCiAgcmV0dXJuIGxpbmVzDQogICAgICAuc3VibGlzdChzdGFydCwgZW5kKQ0KICAgICAgLmFzTWFwKCkNCiAgICAgIC5tYXAoKGksIGxpbmUpID0+DQogICAgICAgICAgTWFwRW50cnkoaSwgcHJpbnRMaW5lKGxpbmUsIHN0YXJ0ICsgaSArIDEsIG1heE51bUxlbmd0aCwgc2V0dGluZ3MpKSkNCiAgICAgIC52YWx1ZXMNCiAgICAgIC5qb2luKCdcbicpOw0KfQ0KDQpTdHJpbmcgY29kZUVycm9yRnJhZ21lbnQoU3RyaW5nIGlucHV0LCBpbnQgbGluZVBvcywgaW50IGNvbHVtblBvcywNCiAgICBbU2V0dGluZ3M/IHNldHRpbmdzXSkgew0KICBmaW5hbCBzcGxpdHRlciA9IG5ldyBSZWdFeHAociJcclxuP3xcbnxcZiIpOw0KICBmaW5hbCBsaW5lcyA9IGlucHV0LnNwbGl0KHNwbGl0dGVyKTsNCiAgc2V0dGluZ3MgPSBzZXR0aW5ncyAhPSBudWxsID8gc2V0dGluZ3MgOiBuZXcgU2V0dGluZ3MoKTsNCiAgZmluYWwgc3RhcnRMaW5lUG9zID0gbWF4KDEsIGxpbmVQb3MgLSBzZXR0aW5ncy5leHRyYUxpbmVzKSAtIDE7DQogIGZpbmFsIGVuZExpbmVQb3MgPSBtaW4obGluZVBvcyArIHNldHRpbmdzLmV4dHJhTGluZXMsIGxpbmVzLmxlbmd0aCk7DQogIGZpbmFsIG1heE51bUxlbmd0aCA9IGVuZExpbmVQb3MudG9TdHJpbmcoKS5sZW5ndGg7DQogIGZpbmFsIHByZXZMaW5lcyA9DQogICAgICBwcmludExpbmVzKGxpbmVzLCBzdGFydExpbmVQb3MsIGxpbmVQb3MsIG1heE51bUxlbmd0aCwgc2V0dGluZ3MpOw0KICBmaW5hbCB0YXJnZXRMaW5lQmVmb3JlQ3Vyc29yID0gcHJpbnRMaW5lKA0KICAgICAgbGluZXNbbGluZVBvcyAtIDFdLnN1YnN0cmluZygwLCBjb2x1bW5Qb3MgLSAxKSwNCiAgICAgIGxpbmVQb3MsDQogICAgICBtYXhOdW1MZW5ndGgsDQogICAgICBzZXR0aW5ncyk7DQogIGZpbmFsIGN1cnNvckxpbmUgPSByZXBlYXRTdHJpbmcoJyAnLCB0YXJnZXRMaW5lQmVmb3JlQ3Vyc29yLmxlbmd0aCkgKyAnXic7DQogIGZpbmFsIG5leHRMaW5lcyA9DQogICAgICBwcmludExpbmVzKGxpbmVzLCBsaW5lUG9zLCBlbmRMaW5lUG9zLCBtYXhOdW1MZW5ndGgsIHNldHRpbmdzKTsNCg0KICByZXR1cm4gW3ByZXZMaW5lcywgY3Vyc29yTGluZSwgbmV4dExpbmVzXQ0KICAgICAgLndoZXJlKChjKSA9PiBjICE9IG51bGwgJiYgYyAhPSAwKQ0KICAgICAgLmpvaW4oJ1xuJyk7DQp9DQoNCmNsYXNzIEpTT05BU1RFeGNlcHRpb24gaW1wbGVtZW50cyBFeGNlcHRpb24gew0KICBmaW5hbCBTdHJpbmcgcmF3TWVzc2FnZTsNCiAgZmluYWwgU3RyaW5nPyBpbnB1dDsNCiAgZmluYWwgU3RyaW5nIHNvdXJjZTsNCiAgZmluYWwgaW50IGxpbmU7DQogIGZpbmFsIGludCBjb2x1bW47DQogIFN0cmluZz8gX21lc3NhZ2U7DQoNCiAgSlNPTkFTVEV4Y2VwdGlvbigNCiAgICAgIHRoaXMucmF3TWVzc2FnZSwgdGhpcy5pbnB1dCwgdGhpcy5zb3VyY2UsIHRoaXMubGluZSwgdGhpcy5jb2x1bW4pIHsNCiAgICBpZiAoaW5wdXQgIT0gbnVsbCkgew0KICAgICAgdGhpcy5fbWVzc2FnZSA9IGxpbmUgIT0gMA0KICAgICAgICAgID8gdGhpcy5yYXdNZXNzYWdlICsgJ1xuJyArIGNvZGVFcnJvckZyYWdtZW50KGlucHV0ISwgbGluZSwgY29sdW1uKQ0KICAgICAgICAgIDogdGhpcy5yYXdNZXNzYWdlOw0KICAgIH0gZWxzZSB7DQogICAgICB0aGlzLl9tZXNzYWdlID0gcmF3TWVzc2FnZTsNCiAgICB9DQogIH0NCg0KICBTdHJpbmc/IGdldCBtZXNzYWdlIHsNCiAgICByZXR1cm4gdGhpcy5fbWVzc2FnZTsNCiAgfQ0KfQ0K","type":"text"},{"path":"json_ast/grapheme_splitter.dart","data":"","type":"text"},{"path":"json_ast/json_ast.dart","data":"ZXhwb3J0ICcuL2xvY2F0aW9uLmRhcnQnIHNob3cgTG9jLCBTZWdtZW50LCBMb2NhdGlvbjsNCmV4cG9ydCAnLi90b2tlbml6ZS5kYXJ0Jw0KICAgIHNob3cNCiAgICAgICAgTm9kZSwNCiAgICAgICAgVmFsdWVOb2RlLA0KICAgICAgICBPYmplY3ROb2RlLA0KICAgICAgICBBcnJheU5vZGUsDQogICAgICAgIFByb3BlcnR5Tm9kZSwNCiAgICAgICAgTGl0ZXJhbE5vZGUsDQogICAgICAgIFZhbHVlSW5kZXgsDQogICAgICAgIFBvc2l0aW9uOw0KZXhwb3J0ICcuL3BhcnNlLmRhcnQnIHNob3cgcGFyc2U7DQpleHBvcnQgJy4vZXJyb3IuZGFydCcgc2hvdyBKU09OQVNURXhjZXB0aW9uLCBTZXR0aW5nczsNCg==","type":"text"},{"path":"json_ast/location.dart","data":"Y2xhc3MgTG9jIHsNCiAgZmluYWwgaW50IGxpbmU7DQogIGZpbmFsIGludCBjb2x1bW47DQoNCiAgTG9jKHtyZXF1aXJlZCB0aGlzLmxpbmUsIHJlcXVpcmVkIHRoaXMuY29sdW1ufSk7DQp9DQoNCmNsYXNzIFNlZ21lbnQgZXh0ZW5kcyBMb2Mgew0KICBmaW5hbCBpbnQgb2Zmc2V0Ow0KDQogIFNlZ21lbnQoaW50IGxpbmUsIGludCBjb2x1bW4sIHRoaXMub2Zmc2V0KQ0KICAgICAgOiBzdXBlcihsaW5lOiBsaW5lLCBjb2x1bW46IGNvbHVtbik7DQoNCiAgYm9vbCBvcGVyYXRvciA9PShkeW5hbWljIG90aGVyKSA9Pg0KICAgICAgb3RoZXIgaXMgU2VnbWVudCAmJg0KICAgICAgbGluZSA9PSBvdGhlci5saW5lICYmDQogICAgICBjb2x1bW4gPT0gb3RoZXIuY29sdW1uICYmDQogICAgICBvZmZzZXQgPT0gb3RoZXIub2Zmc2V0Ow0KfQ0KDQpjbGFzcyBMb2NhdGlvbiB7DQogIGZpbmFsIFNlZ21lbnQgc3RhcnQ7DQogIGZpbmFsIFNlZ21lbnQgZW5kOw0KICBmaW5hbCBTdHJpbmcgc291cmNlOw0KDQogIExvY2F0aW9uKHRoaXMuc3RhcnQsIHRoaXMuZW5kLCBbdGhpcy5zb3VyY2UgPSAiIl0pOw0KDQogIGJvb2wgb3BlcmF0b3IgPT0oZHluYW1pYyBvdGhlcikgPT4NCiAgICAgIG90aGVyIGlzIExvY2F0aW9uICYmDQogICAgICBzdGFydCA9PSBvdGhlci5zdGFydCAmJg0KICAgICAgZW5kID09IG90aGVyLmVuZCAmJg0KICAgICAgc291cmNlID09IG90aGVyLnNvdXJjZTsNCg0KICBzdGF0aWMgTG9jYXRpb24gY3JlYXRlKGludCBzdGFydExpbmUsIGludCBzdGFydENvbHVtbiwgaW50IHN0YXJ0T2Zmc2V0LA0KICAgICAgaW50IGVuZExpbmUsIGludCBlbmRDb2x1bW4sIGludCBlbmRPZmZzZXQsDQogICAgICBbU3RyaW5nIHNvdXJjZSA9ICIiXSkgew0KICAgIGZpbmFsIHN0YXJ0U2VnbWVudCA9IG5ldyBTZWdtZW50KHN0YXJ0TGluZSwgc3RhcnRDb2x1bW4sIHN0YXJ0T2Zmc2V0KTsNCiAgICBmaW5hbCBlbmRTZWdtZW50ID0gbmV3IFNlZ21lbnQoZW5kTGluZSwgZW5kQ29sdW1uLCBlbmRPZmZzZXQpOw0KICAgIHJldHVybiBuZXcgTG9jYXRpb24oc3RhcnRTZWdtZW50LCBlbmRTZWdtZW50LCBzb3VyY2UpOw0KICB9DQp9DQo=","type":"text"},{"path":"json_ast/parse.dart","data":"","type":"text"},{"path":"json_ast/parse_error_types.dart","data":"U3RyaW5nIHVuZXhwZWN0ZWRFbmQoKSA9PiAnVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQnOw0KDQpTdHJpbmcgdW5leHBlY3RlZFRva2VuKFN0cmluZyB0b2tlbiwgU3RyaW5nIHNvdXJjZSwgaW50IGxpbmUsIGludCBjb2x1bW4pIHsNCiAgZmluYWwgc291cmNlT3JFbXB0eSA9IHNvdXJjZSAhPSAiIiA/ICckc291cmNlOicgOiAnJzsNCiAgZmluYWwgcG9zaXRpb25TdHIgPSAnJHNvdXJjZU9yRW1wdHkke2xpbmV9OiRjb2x1bW4nOw0KICByZXR1cm4gJ1VuZXhwZWN0ZWQgdG9rZW4gPCR0b2tlbj4gYXQgJHBvc2l0aW9uU3RyJzsNCn0NCg==","type":"text"},{"path":"json_ast/tokenize.dart","data":"","type":"text"},{"path":"json_ast/tokenize_error_types.dart","data":"U3RyaW5nIHVuZXhwZWN0ZWRTeW1ib2woU3RyaW5nIHN5bWJvbCwgU3RyaW5nIHNvdXJjZSwgaW50IGxpbmUsIGludCBjb2x1bW4pIHsNCiAgZmluYWwgc291cmNlT3JFbXB0eSA9IHNvdXJjZSAhPSAiIiA/ICckc291cmNlOicgOiAnJzsNCiAgZmluYWwgcG9zaXRpb25TdHIgPSAnJHNvdXJjZU9yRW1wdHkke2xpbmV9OiRjb2x1bW4nOw0KICByZXR1cm4gJ1VuZXhwZWN0ZWQgc3ltYm9sIDwkc3ltYm9sPiBhdCAkcG9zaXRpb25TdHInOw0KfQ0K","type":"text"},{"path":"json_ast/utils/substring.dart","data":"aW1wb3J0ICdkYXJ0Om1hdGgnOw0KDQppbXBvcnQgJy4uL2dyYXBoZW1lX3NwbGl0dGVyLmRhcnQnOw0KDQpTdHJpbmcgc3Vic3RyaW5nKFN0cmluZyBzdHIsIGludCBzdGFydCwgW2ludD8gZW5kXSkgew0KICBpZiAoZW5kID09IG51bGwpIHsNCiAgICBlbmQgPSBzdGFydCArIDE7DQogIH0NCiAgZmluYWwgc3BsaXR0ZXIgPSBHcmFwaGVtZVNwbGl0dGVyKCk7DQogIGZpbmFsIGl0ZXJhdG9yID0gc3BsaXR0ZXIuaXRlcmF0ZUdyYXBoZW1lcyhzdHIuc3Vic3RyaW5nKHN0YXJ0KSk7DQogIGZpbmFsIHN0ckJ1ZmZlciA9IFN0cmluZ0J1ZmZlcigpOw0KICBmb3IgKGludCBpID0gMDsgaSA8IGVuZCAtIHN0YXJ0OyBpKyspIHsNCiAgICBzdHJCdWZmZXIud3JpdGUoaXRlcmF0b3IuZWxlbWVudEF0KGkpKTsNCiAgfQ0KICByZXR1cm4gc3RyQnVmZmVyLnRvU3RyaW5nKCk7DQp9DQoNClN0cmluZyBzYWZlU3Vic3RyaW5nKFN0cmluZyBzdHIsIGludCBzdGFydCwgaW50IGVuZCkgew0KICBmaW5hbCBsZW4gPSBzdHIubGVuZ3RoOw0KICBpZiAobGVuID4gc3RhcnQpIHsNCiAgICBmaW5hbCBsYXN0SW5kZXggPSBtaW4obGVuLCBlbmQpOw0KICAgIHJldHVybiBzdHIuc3Vic3RyaW5nKHN0YXJ0LCBsYXN0SW5kZXgpOw0KICB9DQogIHJldHVybiAnJzsNCn0NCg==","type":"text"},{"path":"json_handler/helpers.dart","data":"","type":"text"},{"path":"json_handler/json_to_dart.dart","data":"ZXhwb3J0ICcuL21vZGVsX2dlbmVyYXRvci5kYXJ0JzsNCg==","type":"text"},{"path":"json_handler/model_generator.dart","data":"aW1wb3J0ICdkYXJ0OmNvbGxlY3Rpb24nOw0KDQppbXBvcnQgJy4uL2pzb25fYXN0L2pzb25fYXN0LmRhcnQnOw0KaW1wb3J0ICdoZWxwZXJzLmRhcnQnOw0KaW1wb3J0ICdzeW50YXguZGFydCc7DQoNCmNsYXNzIERhcnRDb2RlIGV4dGVuZHMgV2l0aFdhcm5pbmc8U3RyaW5nPiB7DQogIERhcnRDb2RlKFN0cmluZyByZXN1bHQsIExpc3Q8V2FybmluZz4gd2FybmluZ3MpIDogc3VwZXIocmVzdWx0LCB3YXJuaW5ncyk7DQoNCiAgU3RyaW5nIGdldCBjb2RlID0+IHRoaXMucmVzdWx0Ow0KfQ0KDQovLy8gQSBIaW50IGlzIGEgdXNlciB0eXBlIGNvcnJlY3Rpb24uDQpjbGFzcyBIaW50IHsNCiAgZmluYWwgU3RyaW5nIHBhdGg7DQogIGZpbmFsIFN0cmluZyB0eXBlOw0KDQogIEhpbnQodGhpcy5wYXRoLCB0aGlzLnR5cGUpOw0KfQ0KDQpjbGFzcyBNb2RlbEdlbmVyYXRvciB7DQogIGZpbmFsIFN0cmluZyBfcm9vdENsYXNzTmFtZTsNCiAgTGlzdDxDbGFzc0RlZmluaXRpb24+IGFsbENsYXNzZXMgPSA8Q2xhc3NEZWZpbml0aW9uPltdOw0KICBmaW5hbCBNYXA8U3RyaW5nLCBTdHJpbmc+IHNhbWVDbGFzc01hcHBpbmcgPSBuZXcgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4oKTsNCiAgbGF0ZSBMaXN0PEhpbnQ+IGhpbnRzOw0KDQogIE1vZGVsR2VuZXJhdG9yKHRoaXMuX3Jvb3RDbGFzc05hbWUsIFtoaW50c10pIHsNCiAgICBpZiAoaGludHMgIT0gbnVsbCkgew0KICAgICAgdGhpcy5oaW50cyA9IGhpbnRzOw0KICAgIH0gZWxzZSB7DQogICAgICB0aGlzLmhpbnRzID0gPEhpbnQ+W107DQogICAgfQ0KICB9DQoNCiAgSGludD8gX2hpbnRGb3JQYXRoKFN0cmluZyBwYXRoKSB7DQogICAgZmluYWwgaGludCA9IHRoaXMNCiAgICAgICAgLmhpbnRzDQogICAgICAgIC5maXJzdFdoZXJlKChoKSA9PiBoLnBhdGggPT0gcGF0aCwgb3JFbHNlOiAoKSA9PiBIaW50KCIiLCAiIikpOw0KICAgIGlmIChoaW50LnBhdGggPT0gIiIpIHsNCiAgICAgIHJldHVybiBudWxsOw0KICAgIH0NCiAgICByZXR1cm4gbnVsbDsNCiAgfQ0KDQogIExpc3Q8V2FybmluZz4gX2dlbmVyYXRlQ2xhc3NEZWZpbml0aW9uKFN0cmluZyBjbGFzc05hbWUsDQogICAgICBkeW5hbWljIGpzb25SYXdEeW5hbWljRGF0YSwgU3RyaW5nIHBhdGgsIE5vZGU/IGFzdE5vZGUpIHsNCiAgICBMaXN0PFdhcm5pbmc+IHdhcm5pbmdzID0gPFdhcm5pbmc+W107DQogICAgaWYgKGpzb25SYXdEeW5hbWljRGF0YSBpcyBMaXN0KSB7DQogICAgICAvLyBpZiBmaXJzdCBlbGVtZW50IGlzIGFuIGFycmF5LCBzdGFydCBpbiB0aGUgZmlyc3QgZWxlbWVudC4NCiAgICAgIGZpbmFsIG5vZGUgPSBuYXZpZ2F0ZU5vZGUoYXN0Tm9kZSwgJzAnKTsNCiAgICAgIF9nZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbihjbGFzc05hbWUsIGpzb25SYXdEeW5hbWljRGF0YVswXSwgcGF0aCwgbm9kZSEpOw0KICAgIH0gZWxzZSB7DQogICAgICBmaW5hbCBNYXA8ZHluYW1pYywgZHluYW1pYz4ganNvblJhd0RhdGEgPSBqc29uUmF3RHluYW1pY0RhdGE7DQogICAgICBmaW5hbCBrZXlzID0ganNvblJhd0RhdGEua2V5czsNCiAgICAgIENsYXNzRGVmaW5pdGlvbiBjbGFzc0RlZmluaXRpb24gPSBuZXcgQ2xhc3NEZWZpbml0aW9uKGNsYXNzTmFtZSk7DQogICAgICBrZXlzLmZvckVhY2goKGtleSkgew0KICAgICAgICBUeXBlRGVmaW5pdGlvbiB0eXBlRGVmOw0KICAgICAgICBmaW5hbCBoaW50ID0gX2hpbnRGb3JQYXRoKCckcGF0aC8ka2V5Jyk7DQogICAgICAgIGZpbmFsIG5vZGUgPSBuYXZpZ2F0ZU5vZGUoYXN0Tm9kZSwga2V5KTsNCiAgICAgICAgaWYgKGhpbnQgIT0gbnVsbCkgew0KICAgICAgICAgIHR5cGVEZWYgPSBuZXcgVHlwZURlZmluaXRpb24oaGludC50eXBlLCBhc3ROb2RlOiBub2RlKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0eXBlRGVmID0gbmV3IFR5cGVEZWZpbml0aW9uLmZyb21EeW5hbWljKGpzb25SYXdEYXRhW2tleV0sIG5vZGUpOw0KICAgICAgICB9DQogICAgICAgIGlmICh0eXBlRGVmLm5hbWUgPT0gJ0NsYXNzJykgew0KICAgICAgICAgIHR5cGVEZWYubmFtZSA9IGNhbWVsQ2FzZShrZXkpOw0KICAgICAgICB9DQogICAgICAgIGlmICh0eXBlRGVmLm5hbWUgPT0gJ0xpc3QnICYmIHR5cGVEZWYuc3VidHlwZSA9PSAnTnVsbCcpIHsNCiAgICAgICAgICB3YXJuaW5ncy5hZGQobmV3RW1wdHlMaXN0V2FybignJHBhdGgvJGtleScpKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAodHlwZURlZi5zdWJ0eXBlICE9IG51bGwgJiYgdHlwZURlZi5zdWJ0eXBlID09ICdDbGFzcycpIHsNCiAgICAgICAgICB0eXBlRGVmLnN1YnR5cGUgPSBjYW1lbENhc2Uoa2V5KTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAodHlwZURlZi5pc0FtYmlndW91cykgew0KICAgICAgICAgIHdhcm5pbmdzLmFkZChuZXdBbWJpZ3VvdXNMaXN0V2FybignJHBhdGgvJGtleScpKTsNCiAgICAgICAgfQ0KICAgICAgICBjbGFzc0RlZmluaXRpb24uYWRkRmllbGQoa2V5LCB0eXBlRGVmKTsNCiAgICAgIH0pOw0KDQogICAgICBhbGxDbGFzc2VzLmFkZChjbGFzc0RlZmluaXRpb24pOw0KDQogICAgICBmaW5hbCBkZXBlbmRlbmNpZXMgPSBjbGFzc0RlZmluaXRpb24uZGVwZW5kZW5jaWVzOw0KICAgICAgZGVwZW5kZW5jaWVzLmZvckVhY2goKGRlcGVuZGVuY3kpIHsNCiAgICAgICAgTGlzdDxXYXJuaW5nPiB3YXJucyA9IDxXYXJuaW5nPltdOw0KICAgICAgICBpZiAoZGVwZW5kZW5jeS50eXBlRGVmLm5hbWUgPT0gJ0xpc3QnKSB7DQogICAgICAgICAgLy8gb25seSBnZW5lcmF0ZSBkZXBlbmRlbmN5IGNsYXNzIGlmIHRoZSBhcnJheSBpcyBub3QgZW1wdHkNCiAgICAgICAgICBpZiAoanNvblJhd0RhdGFbZGVwZW5kZW5jeS5uYW1lXS5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAvLyB3aGVuIGxpc3QgaGFzIGFtYmlndW91cyB2YWx1ZXMsIHRha2UgdGhlIGZpcnN0IG9uZSwgb3RoZXJ3aXNlIG1lcmdlIGFsbCBvYmplY3RzDQogICAgICAgICAgICAvLyBpbnRvIGEgc2luZ2xlIG9uZQ0KICAgICAgICAgICAgZHluYW1pYyB0b0FuYWx5emU7DQogICAgICAgICAgICBpZiAoIWRlcGVuZGVuY3kudHlwZURlZi5pc0FtYmlndW91cykgew0KICAgICAgICAgICAgICBXaXRoV2FybmluZzxNYXA+IG1lcmdlV2l0aFdhcm5pbmcgPSBtZXJnZU9iamVjdExpc3QoDQogICAgICAgICAgICAgICAgICBqc29uUmF3RGF0YVtkZXBlbmRlbmN5Lm5hbWVdLCAnJHBhdGgvJHtkZXBlbmRlbmN5Lm5hbWV9Jyk7DQogICAgICAgICAgICAgIHRvQW5hbHl6ZSA9IG1lcmdlV2l0aFdhcm5pbmcucmVzdWx0Ow0KICAgICAgICAgICAgICB3YXJuaW5ncy5hZGRBbGwobWVyZ2VXaXRoV2FybmluZy53YXJuaW5ncyk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICB0b0FuYWx5emUgPSBqc29uUmF3RGF0YVtkZXBlbmRlbmN5Lm5hbWVdWzBdOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZmluYWwgbm9kZSA9IG5hdmlnYXRlTm9kZShhc3ROb2RlLCBkZXBlbmRlbmN5Lm5hbWUpOw0KICAgICAgICAgICAgd2FybnMgPSBfZ2VuZXJhdGVDbGFzc0RlZmluaXRpb24oZGVwZW5kZW5jeS5jbGFzc05hbWUsIHRvQW5hbHl6ZSwNCiAgICAgICAgICAgICAgICAnJHBhdGgvJHtkZXBlbmRlbmN5Lm5hbWV9Jywgbm9kZSk7DQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGZpbmFsIG5vZGUgPSBuYXZpZ2F0ZU5vZGUoYXN0Tm9kZSwgZGVwZW5kZW5jeS5uYW1lKTsNCiAgICAgICAgICB3YXJucyA9IF9nZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbihkZXBlbmRlbmN5LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAganNvblJhd0RhdGFbZGVwZW5kZW5jeS5uYW1lXSwgJyRwYXRoLyR7ZGVwZW5kZW5jeS5uYW1lfScsIG5vZGUpOw0KICAgICAgICB9DQogICAgICAgIHdhcm5pbmdzLmFkZEFsbCh3YXJucyk7DQogICAgICB9KTsNCiAgICB9DQogICAgcmV0dXJuIHdhcm5pbmdzOw0KICB9DQoNCiAgTGlzdDxDbGFzc0RlZmluaXRpb24+IGdlbmVyYXRlQ2xhc3NEZWZpbml0aW9ucyhTdHJpbmcgcmF3SnNvbikgew0KICAgIGZpbmFsIGpzb25SYXdEYXRhID0gZGVjb2RlSlNPTihyYXdKc29uKTsNCiAgICBmaW5hbCBhc3ROb2RlID0gcGFyc2UocmF3SnNvbiwgU2V0dGluZ3MoKSk7DQogICAgX2dlbmVyYXRlQ2xhc3NEZWZpbml0aW9uKF9yb290Q2xhc3NOYW1lLCBqc29uUmF3RGF0YSwgIiIsIGFzdE5vZGUpOw0KICAgIGFsbENsYXNzZXMuZm9yRWFjaCgoYykgew0KICAgICAgZmluYWwgZmllbGRzS2V5cyA9IGMuZmllbGRzLmtleXM7DQogICAgICBmaWVsZHNLZXlzLmZvckVhY2goKGYpIHsNCiAgICAgICAgZmluYWwgdHlwZUZvckZpZWxkID0gYy5maWVsZHNbZl07DQogICAgICAgIGlmICh0eXBlRm9yRmllbGQgIT0gbnVsbCkgew0KICAgICAgICAgIGlmIChzYW1lQ2xhc3NNYXBwaW5nLmNvbnRhaW5zS2V5KHR5cGVGb3JGaWVsZC5uYW1lKSkgew0KICAgICAgICAgICAgYy5maWVsZHNbZl0hLm5hbWUgPSBzYW1lQ2xhc3NNYXBwaW5nW3R5cGVGb3JGaWVsZC5uYW1lXSE7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9KTsNCiAgICByZXR1cm4gYWxsQ2xhc3NlczsNCiAgfQ0KDQogIExpc3Q8Q2xhc3NEZWZpbml0aW9uPiBnZW5lcmF0ZUNsYXNzZXMoU3RyaW5nIHJhd0pzb24pIHsNCiAgICByZXR1cm4gZ2VuZXJhdGVDbGFzc0RlZmluaXRpb25zKHJhd0pzb24pOw0KICB9DQp9DQo=","type":"text"},{"path":"json_handler/syntax.dart","data":"","type":"text"},{"path":"json_handler/warning.dart","data":"Y2xhc3MgV2FybmluZyB7DQogIGZpbmFsIFN0cmluZyB3YXJuaW5nOw0KICBmaW5hbCBTdHJpbmcgcGF0aDsNCg0KICBXYXJuaW5nKHRoaXMud2FybmluZywgdGhpcy5wYXRoKTsNCn0NCg0KY2xhc3MgV2l0aFdhcm5pbmc8VD4gew0KICBmaW5hbCBUIHJlc3VsdDsNCiAgZmluYWwgTGlzdDxXYXJuaW5nPiB3YXJuaW5nczsNCg0KICBXaXRoV2FybmluZyh0aGlzLnJlc3VsdCwgdGhpcy53YXJuaW5ncyk7DQp9DQo=","type":"text"},{"path":"post_gen.dart","data":"aW1wb3J0ICdkYXJ0OmlvJzsNCg0KaW1wb3J0ICdwYWNrYWdlOm1hc29uL21hc29uLmRhcnQnOw0KaW1wb3J0ICdqc29uX2hhbmRsZXIvbW9kZWxfZ2VuZXJhdG9yLmRhcnQnOw0KaW1wb3J0ICdqc29uX2hhbmRsZXIvc3ludGF4LmRhcnQnOw0KaW1wb3J0ICdlbnRpdGllc19idW5kbGUuZGFydCc7DQppbXBvcnQgJ3V0aWxzL3JlY2FzZS5kYXJ0JzsNCmltcG9ydCAncHJlX2dlbi5kYXJ0JyBhcyBwcmVfZ2VuOw0KDQpGdXR1cmU8dm9pZD4gcnVuKEhvb2tDb250ZXh0IGNvbnRleHQpIGFzeW5jIHsNCiAgZmluYWwgdXNlc0ZyZWV6ZWQgPSBjb250ZXh0LnZhcnNbJ3VzZV9mcmVlemVkJ10gYXMgYm9vbDsNCiAgZmluYWwgbG9nZ2VyID0gY29udGV4dC5sb2dnZXI7DQogIGZpbmFsIGRpcmVjdG9yeSA9IERpcmVjdG9yeS5jdXJyZW50LnBhdGg7DQogIExpc3Q8U3RyaW5nPiBmb2xkZXJzOw0KDQogIGlmIChQbGF0Zm9ybS5pc1dpbmRvd3MpIHsNCiAgICBmb2xkZXJzID0gZGlyZWN0b3J5LnNwbGl0KHInXCcpLnRvTGlzdCgpOw0KICB9IGVsc2Ugew0KICAgIGZvbGRlcnMgPSBkaXJlY3Rvcnkuc3BsaXQoJy8nKS50b0xpc3QoKTsNCiAgfQ0KDQogIGZpbmFsIGhhc0pzb24gPSBjb250ZXh0LnZhcnNbJ2pzb24nXSAhPSBudWxsICYmDQogICAgICBjb250ZXh0LnZhcnNbJ2pzb24nXSBpcyBTdHJpbmcgJiYNCiAgICAgIChjb250ZXh0LnZhcnNbJ2pzb24nXSBhcyBTdHJpbmcpLmlzTm90RW1wdHk7DQoNCiAgaWYgKGhhc0pzb24pIHsNCiAgICBmaW5hbCBqc29uSW5kZXggPSAoY29udGV4dC52YXJzWydqc29uSW5kZXgnXSBhcyBpbnQpICsgMTsNCiAgICBmaW5hbCBjbGFzc2VzID0gTW9kZWxHZW5lcmF0b3IoY29udGV4dC52YXJzWydtb2RlbF9uYW1lJ10pDQogICAgICAgIC5nZW5lcmF0ZUNsYXNzRGVmaW5pdGlvbnMoY29udGV4dC52YXJzWydqc29uJ10gYXMgU3RyaW5nKTsNCg0KICAgIGZpbmFsIGNsYXNzVG9QYXJzZSA9DQogICAgICAgIGNsYXNzZXMubGVuZ3RoIC0gMSA+PSBqc29uSW5kZXggPyBjbGFzc2VzW2pzb25JbmRleF0gOiBudWxsOw0KICAgIGZpbmFsIGNsYXNzRmllbGRzVG9QYXJzZSA9IGNsYXNzVG9QYXJzZSAhPSBudWxsDQogICAgICAgID8gY2xhc3Nlc1tqc29uSW5kZXhdLmZpZWxkcw0KICAgICAgICA6IDxTdHJpbmcsIFR5cGVEZWZpbml0aW9uPnt9Ow0KDQogICAgZmluYWwgcHJvcGVydGllc0Zyb21Kc29uID0gPE1hcDxTdHJpbmcsIGR5bmFtaWM+PlsNCiAgICAgIC4uLmNsYXNzRmllbGRzVG9QYXJzZS5rZXlzLm1hcCgNCiAgICAgICAgKGUpIHsNCiAgICAgICAgICBmaW5hbCB2YWx1ZSA9IGNsYXNzRmllbGRzVG9QYXJzZS5lbnRyaWVzDQogICAgICAgICAgICAgIC5maXJzdFdoZXJlKChlbGVtZW50KSA9PiBlbGVtZW50LmtleSA9PSBlKQ0KICAgICAgICAgICAgICAudmFsdWU7DQogICAgICAgICAgZmluYWwgdHlwZSA9DQogICAgICAgICAgICAgICcnJyR7dmFsdWUubmFtZX0keyh2YWx1ZS5zdWJ0eXBlICE9IG51bGwpID8gJzwke3ZhbHVlLnN1YnR5cGV9PicgOiAnJ30nJyc7DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICduYW1lJzogZSwNCiAgICAgICAgICAgICd0eXBlJzogdHlwZSwNCiAgICAgICAgICB9Ow0KICAgICAgICB9LA0KICAgICAgKQ0KICAgIF07DQoNCiAgICBjb250ZXh0LnZhcnMgPSB7DQogICAgICAuLi5jb250ZXh0LnZhcnMsDQogICAgICAncHJvcGVydGllcyc6IHByb3BlcnRpZXNGcm9tSnNvbiwNCiAgICAgICdqc29uSW5kZXgnOiBqc29uSW5kZXgsDQogICAgfTsNCg0KICAgIGlmIChwcm9wZXJ0aWVzRnJvbUpzb24uaXNOb3RFbXB0eSAmJiBjbGFzc0ZpZWxkc1RvUGFyc2UuaXNOb3RFbXB0eSkgew0KICAgICAgZmluYWwgbW9kZWxUZXN0R2VuID0gYXdhaXQgTWFzb25HZW5lcmF0b3IuZnJvbUJ1bmRsZShlbnRpdGllc0J1bmRsZSk7DQoNCiAgICAgIHZhciBmaWx0ZXJlZFZhcnMgPSB7DQogICAgICAgICdtb2RlbF9uYW1lJzogY29udGV4dC52YXJzWydtb2RlbF9uYW1lJ10sDQogICAgICAgICdhZGRpdGlvbmFscyc6IGNvbnRleHQudmFyc1snYWRkaXRpb25hbHMnXSwNCiAgICAgICAgJ3N0eWxlJzogY29udGV4dC52YXJzWydzdHlsZSddLA0KICAgICAgICAnanNvbkluZGV4JzoganNvbkluZGV4LA0KICAgICAgICAncmVsYXRpb25zJzogY2xhc3NUb1BhcnNlICE9IG51bGwNCiAgICAgICAgICAgID8gWw0KICAgICAgICAgICAgICAgIC4uLmNsYXNzVG9QYXJzZS5kZXBlbmRlbmNpZXMNCiAgICAgICAgICAgICAgICAgICAgLm1hcCgoZSkgPT4geyduYW1lJzogUmVDYXNlKGUubmFtZSkuc25ha2VDYXNlfSkNCiAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgOiBudWxsLA0KICAgICAgICAnanNvbic6ICcke2NvbnRleHQudmFyc1snanNvbiddfScsDQogICAgICAgICdqc29uRmlsZSc6ICcnDQogICAgICB9Ow0KDQogICAgICBhd2FpdCBwcmVfZ2VuLnJ1bigNCiAgICAgICAgY29udGV4dC4udmFycyA9IGZpbHRlcmVkVmFycywNCiAgICAgICk7DQoNCiAgICAgIGF3YWl0IG1vZGVsVGVzdEdlbi5nZW5lcmF0ZSgNCiAgICAgICAgRGlyZWN0b3J5R2VuZXJhdG9yVGFyZ2V0KA0KICAgICAgICAgIERpcmVjdG9yeSgoJyR7Zm9sZGVycy5qb2luKCcvJyl9JykpLA0KICAgICAgICApLA0KICAgICAgICB2YXJzOiBjb250ZXh0LnZhcnMsDQogICAgICAgIGxvZ2dlcjogbG9nZ2VyLA0KICAgICAgKTsNCg0KICAgICAgaWYgKGNsYXNzZXMubGVuZ3RoIC0gMSAhPSBqc29uSW5kZXgpIHsNCiAgICAgICAgYXdhaXQgcnVuKGNvbnRleHQpOw0KICAgICAgfSBlbHNlIGlmICh1c2VzRnJlZXplZCAmJg0KICAgICAgICAgIGxvZ2dlci5jb25maXJtKCdXb3VsZCB5b3UgbGlrZSB0byBnZW5lcmF0ZSB0aGUgZnJlZXplZCBtb2RlbD8nLA0KICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUpKSB7DQogICAgICAgIGZpbmFsIGxpYkluZGV4ID0gZm9sZGVycy5pbmRleFdoZXJlKChmb2xkZXIpID0+IGZvbGRlciA9PSAnbGliJyk7DQogICAgICAgIGZpbmFsIHJvb3QgPSBmb2xkZXJzLnN1Ymxpc3QoMCwgbGliSW5kZXgpLmpvaW4oJy8nKS50b1N0cmluZygpOw0KICAgICAgICBmaW5hbCBidWlsZFJ1bm5lclByb2Nlc3MgPSBhd2FpdCBQcm9jZXNzLnN0YXJ0KA0KICAgICAgICAgICdmbHV0dGVyJywNCiAgICAgICAgICBbDQogICAgICAgICAgICAncHViJywNCiAgICAgICAgICAgICdydW4nLA0KICAgICAgICAgICAgJ2J1aWxkX3J1bm5lcicsDQogICAgICAgICAgICAnYnVpbGQnLA0KICAgICAgICAgICAgJy0tZGVsZXRlLWNvbmZsaWN0aW5nLW91dHB1dHMnDQogICAgICAgICAgXSwNCiAgICAgICAgICBydW5JblNoZWxsOiB0cnVlLA0KICAgICAgICAgIHdvcmtpbmdEaXJlY3Rvcnk6IHJvb3QsDQogICAgICAgICk7DQogICAgICAgIGF3YWl0IHN0ZG91dC5hZGRTdHJlYW0oYnVpbGRSdW5uZXJQcm9jZXNzLnN0ZG91dCk7DQogICAgICAgIGF3YWl0IHN0ZGVyci5hZGRTdHJlYW0oYnVpbGRSdW5uZXJQcm9jZXNzLnN0ZGVycik7DQogICAgICB9DQogICAgfQ0KICB9DQp9DQo=","type":"text"},{"path":"pre_gen.dart","data":"Ly8gaWdub3JlX2Zvcl9maWxlOiBsaW5lc19sb25nZXJfdGhhbl84MF9jaGFycywgYXZvaWRfY2F0Y2hpbmdfZXJyb3JzDQoNCmltcG9ydCAnZGFydDppbyc7DQoNCmltcG9ydCAncGFja2FnZTptYXNvbi9tYXNvbi5kYXJ0JzsNCg0KaW1wb3J0ICdqc29uX2hhbmRsZXIvbW9kZWxfZ2VuZXJhdG9yLmRhcnQnOw0KaW1wb3J0ICdqc29uX2hhbmRsZXIvc3ludGF4LmRhcnQnOw0KaW1wb3J0ICdlbnRpdHlfc2VydmljZS5kYXJ0JzsNCmltcG9ydCAncHJvcGVydHkuZGFydCc7DQppbXBvcnQgJ3V0aWxzL3JlY2FzZS5kYXJ0JzsNCg0KRnV0dXJlPHZvaWQ+IHJ1bihIb29rQ29udGV4dCBjb250ZXh0KSBhc3luYyB7DQogIGZpbmFsIGxvZ2dlciA9IGNvbnRleHQubG9nZ2VyOw0KDQogIGZpbmFsIGluZm9zID0gY29udGV4dC52YXJzOw0KDQogIGxvZ2dlci5pbmZvKCckaW5mb3MnKTsNCiAgZmluYWwgYWRkaXRpb25hbHMgPSBjb250ZXh0LnZhcnNbJ2FkZGl0aW9uYWxzJ10gYXMgTGlzdDxkeW5hbWljPjsNCiAgdmFyIGhhc1JlbGF0aW9ucyA9IGNvbnRleHQudmFyc1sncmVsYXRpb25zJ10gIT0gbnVsbCAmJg0KICAgICAgKGNvbnRleHQudmFyc1sncmVsYXRpb25zJ10gYXMgTGlzdCkuaXNOb3RFbXB0eTsNCg0KICAvL1RvZG8hIGFxdWkgdmVtIGEgbG9naWNhIGRvcyB0ZW1wbGF0ZXMgY29tIG8gdXNlX2FxdWlsbywgc2UgbmEgbGlzdGEgZG9zIGFkaWNpb25haXMNCiAgLy8gZm9pIGFkaWNpb25hZG8gdG9zdHJpbmcsIGVxdWF0YWJsZSwgZWxlcyB2aXJhbSBib2xlYW5vcyBhcXVpLg0KICBjb250ZXh0LnZhcnMgPSB7DQogICAgLi4uY29udGV4dC52YXJzLA0KICAgICdoYXNSZWxhdGlvbnMnOiBoYXNSZWxhdGlvbnMsDQogICAgJ3VzZV9jb3B5d2l0aCc6IGFkZGl0aW9uYWxzLmNvbnRhaW5zKCdjb3B5V2l0aCcpLA0KICAgICd1c2VfZXF1YXRhYmxlJzogYWRkaXRpb25hbHMuY29udGFpbnMoJ2VxdWF0YWJsZScpLA0KICAgICd1c2Vfbm9uZSc6IHRydWUsDQogICAgJ2pzb25JbmRleCc6ICgoY29udGV4dC52YXJzWydqc29uSW5kZXgnXSBhcyBpbnQ/KSA/PyAwKSwNCiAgfTsNCg0KICBsb2dnZXIuaW5mbygnYW50ZXMganNvbkZJTEUnKTsNCg0KICBsb2dnZXIuaW5mbyhjb250ZXh0LnZhcnNbJ2pzb25GaWxlJ10pOw0KDQogIGZpbmFsIGpzb25GaWxlID0gRmlsZShjb250ZXh0LnZhcnNbJ2pzb25GaWxlJ10pOw0KDQogIGxvZ2dlci5pbmZvKCdERVBPSVMganNvbkZJTEUnKTsNCg0KICBmaW5hbCBqc29uSW5kZXggPSBjb250ZXh0LnZhcnNbJ2pzb25JbmRleCddIGFzIGludDsNCg0KICBsb2dnZXIuaW5mbygnREVQT0lTIGpzb25JbmRleCcpOw0KDQogIGxvZ2dlci5pbmZvKCdhbnRlcyBpZicpOw0KDQogIC8vLyBDaGVjayBmb3IganNvbiBmaWxlIC0tanNvbkZpbGUNCiAgaWYgKGpzb25GaWxlLmV4aXN0c1N5bmMoKSkgew0KICAgIGNvbnRleHQudmFycyA9IHsNCiAgICAgIC4uLmNvbnRleHQudmFycywNCiAgICAgICdqc29uJzoganNvbkZpbGUucmVhZEFzU3RyaW5nU3luYygpLA0KICAgIH07DQogIH0NCg0KICAvLy8gSWYgdGhlcmUgaXMgc2VlZGVkLWpzb24sIHRoZW4gaGFuZGxlIGpzb24NCiAgaWYgKGNvbnRleHQudmFyc1snanNvbiddIGlzIFN0cmluZyAmJg0KICAgICAgKGNvbnRleHQudmFyc1snanNvbiddIGFzIFN0cmluZykuaXNOb3RFbXB0eSkgew0KICAgIGxvZ2dlci5pbmZvKCdkZW50cm8ganNvbicpOw0KDQogICAgZmluYWwgY2xhc3NlcyA9IE1vZGVsR2VuZXJhdG9yKGNvbnRleHQudmFyc1snZW50aXR5X25hbWUnXSkNCiAgICAgICAgLmdlbmVyYXRlQ2xhc3NEZWZpbml0aW9ucyhjb250ZXh0LnZhcnNbJ2pzb24nXSBhcyBTdHJpbmcpOw0KICAgIGZpbmFsIGNsYXNzVG9QYXJzZSA9DQogICAgICAgIGNsYXNzZXMubGVuZ3RoIC0gMSA+PSBqc29uSW5kZXggPyBjbGFzc2VzW2pzb25JbmRleF0gOiBudWxsOw0KICAgIGZpbmFsIGNsYXNzRmllbGRzVG9QYXJzZSA9IGNsYXNzVG9QYXJzZSAhPSBudWxsDQogICAgICAgID8gY2xhc3Nlc1tqc29uSW5kZXhdLmZpZWxkcw0KICAgICAgICA6IDxTdHJpbmcsIFR5cGVEZWZpbml0aW9uPnt9Ow0KDQogICAgZmluYWwgcHJvcGVydGllc0Zyb21Kc29uID0gPE1hcDxTdHJpbmcsIGR5bmFtaWM+PlsNCiAgICAgIC4uLmNsYXNzRmllbGRzVG9QYXJzZS5rZXlzLm1hcCgNCiAgICAgICAgKGUpIHsNCiAgICAgICAgICBmaW5hbCB2YWx1ZSA9IGNsYXNzRmllbGRzVG9QYXJzZS5lbnRyaWVzDQogICAgICAgICAgICAgIC5maXJzdFdoZXJlKChlbGVtZW50KSA9PiBlbGVtZW50LmtleSA9PSBlKQ0KICAgICAgICAgICAgICAudmFsdWU7DQogICAgICAgICAgZmluYWwgdHlwZSA9DQogICAgICAgICAgICAgICcnJyR7dmFsdWUubmFtZX0keyh2YWx1ZS5zdWJ0eXBlICE9IG51bGwpID8gJzwke3ZhbHVlLnN1YnR5cGV9PicgOiAnJ30nJyc7DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICduYW1lJzogZSwNCiAgICAgICAgICAgICd0eXBlJzogdHlwZSwNCiAgICAgICAgICB9Ow0KICAgICAgICB9LA0KICAgICAgKQ0KICAgIF07DQoNCiAgICBsb2dnZXIuaW5mbygnZGVwb2lzIGpzb24nKTsNCg0KLy90b2RvISBhcXVpIGV1IGNvbmNhdGVubyBhcyB2YXJpYXZlaXMgZG8gYnJpY2sueWFtbCwgYWRpY2lvbmFuZG8gb3V0cmFzLg0KICAgIGNvbnRleHQudmFycyA9IHsNCiAgICAgIC4uLmNvbnRleHQudmFycywNCiAgICAgICdyZWxhdGlvbnMnOiAoY2xhc3NUb1BhcnNlPy5kZXBlbmRlbmNpZXMgPz8gW10pDQogICAgICAgICAgLm1hcCgoZSkgPT4geyduYW1lJzogUmVDYXNlKGUubmFtZSkuc25ha2VDYXNlfSkNCiAgICAgICAgICAudG9MaXN0KCksDQogICAgICAnZW50aXR5X25hbWUnOiAoY2xhc3NUb1BhcnNlPy5uYW1lID8/IGNvbnRleHQudmFyc1snZW50aXR5X25hbWUnXSksDQogICAgICAncHJvcGVydGllcyc6IHByb3BlcnRpZXNGcm9tSnNvbiwNCiAgICAgICdoYXNSZWxhdGlvbnMnOiAoY2xhc3NUb1BhcnNlPy5kZXBlbmRlbmNpZXMuaXNOb3RFbXB0eSA9PSB0cnVlKSwNCiAgICB9Ow0KDQogICAgaGFzUmVsYXRpb25zID0gKGNsYXNzVG9QYXJzZT8uZGVwZW5kZW5jaWVzLmlzTm90RW1wdHkgPT0gdHJ1ZSk7DQogIH0NCg0KICBmaW5hbCBoYXNTZWVkZWRQcm9wZXJ0aWVzID0gY29udGV4dC52YXJzWydwcm9wZXJ0aWVzJ10gIT0gbnVsbCAmJg0KICAgICAgKGNvbnRleHQudmFyc1sncHJvcGVydGllcyddIGFzIExpc3QpLmlzTm90RW1wdHk7DQoNCiAgLy8gRm9yIHJlbGF0aW9ucyBjaGVjazoNCiAgLy8gQXMgcmVsYXRpb25zIHJlcXVpcmVzIHRoZSBsaWIgZGlyZWN0b3J5LCB3ZSBtYWtlIHRoaXMgY2hlY2sNCiAgLy8gYmVmb3JlaGFuZCB0byBtYWtlIHN1cmUgd2UgYXJlIGluIHRoZSBsaWIgZGlyZWN0b3J5Lg0KICBpZiAoaGFzUmVsYXRpb25zKSB7DQogICAgZmluYWwgcHJvZ3Jlc3MgPSBsb2dnZXIucHJvZ3Jlc3MoJ1ZhbGlkYXRpbmcgb3V0cHV0IGRpcmVjdG9yeScpOw0KICAgIGF3YWl0IEVudGl0eVNlcnZpY2UudmFsaWRhdGVEaXJlY3RvcnkoY29udGV4dCk7DQogICAgcHJvZ3Jlc3MuY29tcGxldGUoJ1ZhbGlkIG91dHB1dCBkaXJlY3RvcnkhJyk7DQogIH0NCg0KICBmaW5hbCBwcm9wZXJ0aWVzID0gPE1hcDxTdHJpbmcsIGR5bmFtaWM+PltdOw0KDQogIGlmIChoYXNTZWVkZWRQcm9wZXJ0aWVzKSB7DQogICAgZmluYWwgc2VlZGVkUHJvcGVydGllcyA9IGNvbnRleHQudmFyc1sncHJvcGVydGllcyddIGFzIExpc3Q7DQogICAgRW50aXR5U2VydmljZS52ZXJpZnlTZWVkZWRQcm9wZXJ0aWVzKHNlZWRlZFByb3BlcnRpZXMsIGxvZ2dlcik7DQogICAgZm9yIChmaW5hbCBwcm9wZXJ0eSBpbiBzZWVkZWRQcm9wZXJ0aWVzKSB7DQogICAgICBFbnRpdHlTZXJ2aWNlLmFkZFByb3BlcnR5KA0KICAgICAgICBwcm9wZXJ0aWVzLA0KICAgICAgICBQcm9wZXJ0eS5mcm9tTWFwKHByb3BlcnR5IGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KSwNCiAgICAgICk7DQogICAgfQ0KICB9IGVsc2UgaWYgKA0KICAgICAgLy9Ub2RvISBhZGljaW9uYW5kbyBhdHJpYnV0b3MgbmEgbWFvDQogICAgICAvLyBTdHJpbmcgbmFtZQ0KICAgICAgLy8gaW50IGFnZQ0KICAgICAgLy8gZGVwb2lzIGRpZ2l0YSAiZSIgcGFyYSBzYWlyICsgZW50ZXINCiAgICAgIGxvZ2dlci5jb25maXJtKA0KICAgICc/IERvIHlvdSB3YW50IHRvIGFkZCBwcm9wZXJ0aWVzIHRvIHlvdXIgZW50aXR5PycsDQogICAgZGVmYXVsdFZhbHVlOiB0cnVlLA0KICApKSB7DQogICAgRW50aXR5U2VydmljZS5hZGRQcm9wZXJ0aWVzKGxvZ2dlciwgcHJvcGVydGllcyk7DQogIH0NCg0KICBjb250ZXh0LnZhcnMgPSB7DQogICAgLi4uY29udGV4dC52YXJzLA0KICAgICdwcm9wZXJ0aWVzJzogcHJvcGVydGllcywNCiAgICAnaGFzUHJvcGVydGllcyc6IHByb3BlcnRpZXMuaXNOb3RFbXB0eSwNCiAgfTsNCn0NCg0KRnV0dXJlPHZvaWQ+IHByZUdlbkhvb2tXcmFwcGVyKEhvb2tDb250ZXh0IGNvbnRleHQsDQogICAge0Z1bmN0aW9uKE1hcDxTdHJpbmcsIGR5bmFtaWM+IHZhbHVlKT8gcHJlR2VuSG9va0NoYW5nZWR9KSBhc3luYyB7DQogIGF3YWl0IHJ1bihjb250ZXh0KTsNCiAgcHJlR2VuSG9va0NoYW5nZWQ/LmNhbGwoY29udGV4dC52YXJzKTsNCn0NCg==","type":"text"},{"path":"property.dart","data":"aW1wb3J0ICdkYXJ0OmNvbnZlcnQnOw0KaW1wb3J0ICdlbnRpdHlfc2VydmljZS5kYXJ0JzsNCg0KLy8vIHtAdGVtcGxhdGUgcHJvcGVydHl9DQovLy8gQSBwcm9wZXJ0eSBmb3IgbW9kZWwgY2xhc3MNCi8vLyB7QGVuZHRlbXBsYXRlfQ0KY2xhc3MgUHJvcGVydHkgew0KICAvLy8ge0BtYWNybyBwcm9wZXJ0eX0NCiAgY29uc3QgUHJvcGVydHkoew0KICAgIHJlcXVpcmVkIHRoaXMubmFtZSwNCiAgICByZXF1aXJlZCB0aGlzLnR5cGUsDQogICAgdGhpcy5pc051bGxhYmxlID0gZmFsc2UsDQogIH0pOw0KDQogIC8vLyBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkNCiAgZmluYWwgU3RyaW5nIG5hbWU7DQoNCiAgLy8vIFRoZSB0eXBlIG9mIHRoZSBwcm9wZXJ0eQ0KICBmaW5hbCBTdHJpbmcgdHlwZTsNCg0KICAvLy8gQSBmbGFnIHRvIGhhbmRsZSBjYXNlcyB3aGVyZSB0aGUganNvbiB2YWx1ZSBpcyBub3QgY2FtZWwgY2FzZQ0KICAvLy8NCiAgLy8vIEV4YW1wbGU6DQogIC8vLyBgYGBqc29uDQogIC8vLyB7DQogIC8vLyAgICJleWVfY29sb3IiOiAiYmxhY2siDQogIC8vLyB9DQogIC8vLyBgYGANCiAgLy8vIFdlIHdvdWxkIHdhbnQgdGhlIG1vZGVsIG5hbWUgdG8gYmUgZXllQ29sb3Igd2l0aCBpdCBwYXJzZWQgZnJvbSBleWVfY29sb3IuDQogIGJvb2wgZ2V0IGlzQ2FtZWxDYXNlID0+IEVudGl0eVNlcnZpY2UuaXNDYW1lbENhc2UobmFtZSk7DQoNCiAgLy8vIEEgZmxhZyBpZiB0aGUgcHJvcGVydHkgaXMgbnVsbGFibGUNCiAgZmluYWwgYm9vbCBpc051bGxhYmxlOw0KDQogIGZhY3RvcnkgUHJvcGVydHkuZnJvbU1hcChNYXA8U3RyaW5nLCBkeW5hbWljPiBtYXApIHsNCiAgICByZXR1cm4gUHJvcGVydHkoDQogICAgICBuYW1lOiBtYXBbJ25hbWUnXSBhcyBTdHJpbmcsDQogICAgICB0eXBlOiBtYXBbJ3R5cGUnXSBhcyBTdHJpbmcsDQogICAgICBpc051bGxhYmxlOiAobWFwWyd0eXBlJ10gYXMgU3RyaW5nKS5lbmRzV2l0aCgnPycpLA0KICAgICk7DQogIH0NCg0KICBmYWN0b3J5IFByb3BlcnR5LmZyb21Kc29uKFN0cmluZyBzb3VyY2UpID0+DQogICAgICBQcm9wZXJ0eS5mcm9tTWFwKGpzb24uZGVjb2RlKHNvdXJjZSkgYXMgTWFwPFN0cmluZywgZHluYW1pYz4pOw0KfQ0K","type":"text"},{"path":"pubspec.yaml","data":"bmFtZTogbW9kZWxfaG9va3MNCg0KZW52aXJvbm1lbnQ6DQogIHNkazogIj49Mi4xMi4wIDwzLjAuMCINCg0KZGVwZW5kZW5jaWVzOg0KICBtYXNvbjogXjAuMS4wLWRldg0KICB5YW1sOiBeMy4xLjENCiAgZGFydF9zdHlsZTogXjIuMi41DQoNCmRldl9kZXBlbmRlbmNpZXM6DQogIHZlcnlfZ29vZF9hbmFseXNpczogXjMuMC4xDQo=","type":"text"},{"path":"utils/recase.dart","data":"Y2xhc3MgUmVDYXNlIHsNCiAgZmluYWwgUmVnRXhwIF91cHBlckFscGhhUmVnZXggPSBSZWdFeHAocidbQS1aXScpOw0KDQogIGZpbmFsIHN5bWJvbFNldCA9IHsnICcsICcuJywgJy8nLCAnXycsICdcXCcsICctJ307DQoNCiAgbGF0ZSBTdHJpbmcgb3JpZ2luYWxUZXh0Ow0KICBsYXRlIExpc3Q8U3RyaW5nPiBfd29yZHM7DQoNCiAgUmVDYXNlKFN0cmluZyB0ZXh0KSB7DQogICAgdGhpcy5vcmlnaW5hbFRleHQgPSB0ZXh0Ow0KICAgIHRoaXMuX3dvcmRzID0gX2dyb3VwSW50b1dvcmRzKHRleHQpOw0KICB9DQoNCiAgTGlzdDxTdHJpbmc+IF9ncm91cEludG9Xb3JkcyhTdHJpbmcgdGV4dCkgew0KICAgIFN0cmluZ0J1ZmZlciBzYiA9IFN0cmluZ0J1ZmZlcigpOw0KICAgIExpc3Q8U3RyaW5nPiB3b3JkcyA9IFtdOw0KICAgIGJvb2wgaXNBbGxDYXBzID0gdGV4dC50b1VwcGVyQ2FzZSgpID09IHRleHQ7DQoNCiAgICBmb3IgKGludCBpID0gMDsgaSA8IHRleHQubGVuZ3RoOyBpKyspIHsNCiAgICAgIFN0cmluZyBjaGFyID0gdGV4dFtpXTsNCiAgICAgIFN0cmluZz8gbmV4dENoYXIgPSBpICsgMSA9PSB0ZXh0Lmxlbmd0aCA/IG51bGwgOiB0ZXh0W2kgKyAxXTsNCg0KICAgICAgaWYgKHN5bWJvbFNldC5jb250YWlucyhjaGFyKSkgew0KICAgICAgICBjb250aW51ZTsNCiAgICAgIH0NCg0KICAgICAgc2Iud3JpdGUoY2hhcik7DQoNCiAgICAgIGJvb2wgaXNFbmRPZldvcmQgPSBuZXh0Q2hhciA9PSBudWxsIHx8DQogICAgICAgICAgKF91cHBlckFscGhhUmVnZXguaGFzTWF0Y2gobmV4dENoYXIpICYmICFpc0FsbENhcHMpIHx8DQogICAgICAgICAgc3ltYm9sU2V0LmNvbnRhaW5zKG5leHRDaGFyKTsNCg0KICAgICAgaWYgKGlzRW5kT2ZXb3JkKSB7DQogICAgICAgIHdvcmRzLmFkZChzYi50b1N0cmluZygpKTsNCiAgICAgICAgc2IuY2xlYXIoKTsNCiAgICAgIH0NCiAgICB9DQoNCiAgICByZXR1cm4gd29yZHM7DQogIH0NCg0KICBTdHJpbmcgZ2V0IHNuYWtlQ2FzZSA9PiBfZ2V0U25ha2VDYXNlKCk7DQoNCiAgU3RyaW5nIF9nZXRTbmFrZUNhc2UoKSB7DQogICAgTGlzdDxTdHJpbmc+IHdvcmRzID0gdGhpcy5fd29yZHMubWFwKCh3b3JkKSA9PiB3b3JkLnRvTG93ZXJDYXNlKCkpLnRvTGlzdCgpOw0KDQogICAgcmV0dXJuIHdvcmRzLmpvaW4oJ18nKTsNCiAgfQ0KfQ0K","type":"text"},{"path":"utils/string_extensions.dart","data":"ZXh0ZW5zaW9uIFN0cmluZ1ggb24gU3RyaW5nIHsNCiAgLy8gUHJvcGVydHkgdHlwZSB3aXRoIG51bGwgb3BlcmF0b3Igc3RyaXBwZWQNCiAgU3RyaW5nIGdldCBjbGVhbmVkIHsNCiAgICBpZiAoZW5kc1dpdGgoJz8nKSkgew0KICAgICAgcmV0dXJuIHN1YnN0cmluZygwLCBsZW5ndGggLSAxKTsNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpczsNCiAgfQ0KfQ0K","type":"text"}],"name":"entities","description":"A new brick to create a entity","version":"0.1.0+1","environment":{"mason":">=0.1.0-dev.53 <0.1.0"},"readme":{"path":"README.md","data":"IyBlbnRpdGllcwoKWyFbUG93ZXJlZCBieSBNYXNvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9lbmRwb2ludD91cmw9aHR0cHMlM0ElMkYlMkZ0aW55dXJsLmNvbSUyRm1hc29uLWJhZGdlKV0oaHR0cHM6Ly9naXRodWIuY29tL2ZlbGFuZ2VsL21hc29uKQoKQSBuZXcgYnJpY2sgY3JlYXRlZCB3aXRoIHRoZSBNYXNvbiBDTEkuCgpfR2VuZXJhdGVkIGJ5IFttYXNvbl1bMV0g8J+nsV8KCiMjIEdldHRpbmcgU3RhcnRlZCDwn5qACgpUaGlzIGlzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIGEgbmV3IGJyaWNrLgpBIGZldyByZXNvdXJjZXMgdG8gZ2V0IHlvdSBzdGFydGVkIGlmIHRoaXMgaXMgeW91ciBmaXJzdCBicmljayB0ZW1wbGF0ZToKCi0gW09mZmljaWFsIE1hc29uIERvY3VtZW50YXRpb25dWzJdCi0gW0NvZGUgZ2VuZXJhdGlvbiB3aXRoIE1hc29uIEJsb2ddWzNdCi0gW1ZlcnkgR29vZCBMaXZlc3RyZWFtOiBGZWxpeCBBbmdlbG92IERlbW9zIE1hc29uXVs0XQotIFtGbHV0dGVyIFBhY2thZ2Ugb2YgdGhlIFdlZWs6IE1hc29uXVs1XQotIFtPYnNlcnZhYmxlIEZsdXR0ZXI6IEJ1aWxkaW5nIGEgTWFzb24gYnJpY2tdWzZdCi0gW01lZXQgTWFzb246IEZsdXR0ZXIgVmlraW5ncyAyMDIyXVs3XQoKWzFdOiBodHRwczovL2dpdGh1Yi5jb20vZmVsYW5nZWwvbWFzb24KWzJdOiBodHRwczovL2RvY3MuYnJpY2todWIuZGV2ClszXTogaHR0cHM6Ly92ZXJ5Z29vZC52ZW50dXJlcy9ibG9nL2NvZGUtZ2VuZXJhdGlvbi13aXRoLW1hc29uCls0XTogaHR0cHM6Ly95b3V0dS5iZS9HNFBUakE2dHBUVQpbNV06IGh0dHBzOi8veW91dHUuYmUvcWpBMEpGaVBNblEKWzZdOiBodHRwczovL3lvdXR1LmJlL284QjFFZmNVaXN3Cls3XTogaHR0cHM6Ly95b3V0dS5iZS9MWGhnaUY1SGlRZwo=","type":"text"},"changelog":{"path":"CHANGELOG.md","data":"IyAwLjEuMCsxCgotIFRPRE86IERlc2NyaWJlIGluaXRpYWwgcmVsZWFzZS4K","type":"text"},"license":{"path":"LICENSE","data":"VE9ETzogQWRkIHlvdXIgbGljZW5zZSBoZXJlLgo=","type":"text"},"vars":{"entity_name":{"type":"string","description":"The entity name","default":"entity","prompt":"What is the entities name?"},"additionals":{"type":"array","description":"The additional methods/extensions you can have on a model","defaults":["copyWith","json","equatable","toString"],"prompt":"What additional methods/extensions should the model have?","values":["copyWith","json","equatable","toString"]},"style":{"type":"enum","description":"The style that the file is augmented via generation code","default":"basic","prompt":"What is the model style?","values":["basic"]},"jsonFile":{"type":"string","description":"Creates the model through json","default":"","prompt":"SKIP THIS IF NOT USING A JSON FILE"}}});